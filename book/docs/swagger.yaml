basePath: /api/v1
definitions:
  structs.AuthorBasicResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  structs.BookDeleteResponse:
    properties:
      data:
        type: boolean
    type: object
  structs.BookResponse:
    properties:
      authors:
        items:
          $ref: '#/definitions/structs.AuthorBasicResponse'
        type: array
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      userId:
        type: integer
    type: object
  structs.BooksPaginatedResponse:
    properties:
      data:
        properties:
          limit:
            type: integer
          next_page:
            type: integer
          offset:
            type: integer
          page:
            type: integer
          prev_page:
            type: integer
          records:
            items:
              properties:
                id:
                  type: integer
                title:
                  type: string
                url:
                  type: string
              type: object
            type: array
          total_page:
            type: integer
          total_record:
            type: integer
        type: object
    type: object
  structs.CreateBookInput:
    properties:
      authorIds:
        items:
          type: integer
        type: array
      description:
        type: string
      title:
        type: string
    required:
    - authorIds
    - title
    type: object
  structs.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  structs.UpdateBookInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
host: localhost:5001
info:
  contact:
    email: bsse0807@iit.du.ac.bd
    name: API Support
  description: This is a sample book server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: get books
      parameters:
      - description: paginate
        format: int
        in: query
        name: page
        type: integer
      - description: paginate
        format: int
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BooksPaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Show Books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: post book
      parameters:
      - description: Add books
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.CreateBookInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/structs.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Add a book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: delete book
      parameters:
      - description: Book ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/structs.BookDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: get books
      parameters:
      - description: Book ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Show Books
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: patch book
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update books
        in: body
        name: input
        schema:
          $ref: '#/definitions/structs.UpdateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a book
      tags:
      - books
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
